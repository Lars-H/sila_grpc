<?xml version="1.0" encoding="UTF-8" ?>
<!--xs:schema targetNamespace="urn:org:astm:animl:schema:technique:draft:0.90" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:org:astm:animl:schema:technique:draft:0.90" elementFormDefault="qualified" attributeFormDefault="unqualified"-->
<xs:schema targetNamespace="urn:org:sila-standard:feature:schema:draft" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="urn:org:sila-standard:feature:schema:draft" elementFormDefault="qualified"
           attributeFormDefault="unqualified">
    <xs:simpleType name="stringType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>

    <xs:simpleType name="intType">
        <xs:restriction base="xs:positiveInteger"/>
    </xs:simpleType>

    <xs:simpleType name="decType">
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>

    <xs:simpleType name="identifierType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-z]+(_?[a-zA-Z0-9]+)+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="versionType">
        <xs:restriction base="xs:string">
            <xs:pattern value="([0-9])+\.([0-9])+\.([0-9])+\.([0-9])+"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="unitType">
        <xs:sequence>
            <xs:element name="SIUnit" type="SIUnitType"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string"/>
        <xs:attribute name="quantity" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SIUnitType">
        <xs:annotation>
            <xs:documentation>Combination of SI Units used to represent Scientific unit</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="SIUnitNameList">
                <xs:attribute name="factor" type="xs:double" use="optional" default="1"/>
                <xs:attribute name="exponent" type="xs:double" use="optional" default="1"/>
                <xs:attribute name="offset" type="xs:double" use="optional" default="0"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="SIUnitNameList">
        <xs:annotation>
            <xs:documentation>Names of all SI Units</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:enumeration value="1">
                <xs:annotation>
                    <xs:documentation>Represents a dimensionless unit.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="m">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "meter".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kg">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "kilogram".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="s">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "second".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="A">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "ampere".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="K">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "kelvin".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mol">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "mol".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cd">
                <xs:annotation>
                    <xs:documentation>Represents the SI unit "candela".</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="silaType">
        <xs:annotation>
            <xs:documentation>All type which can be as Parameter, return values etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="String">
                <xs:annotation>
                    <xs:documentation>
                        A string composed of any number of UNICODE characters.
                        Constraints = POSIX regular expression.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Enum">
                <xs:annotation>
                    <xs:documentation>A enumeration of Strings.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Integer">
                <xs:annotation>
                    <xs:documentation>A integer value. Positive and negative counting numbers, as well as zero.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RealNumber">
                <xs:annotation>
                    <xs:documentation>A floating point number. Numbers that have decimal representations that have a
                        finite or infinite sequence of digits to the right of the decimal point. They can be positive,
                        negative, or zero. All rational numbers are real, but the converse is not true.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PhysicalValue">
                <xs:annotation>
                    <xs:documentation>A physical value is a numeric value followed by a Unit.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Unit">
                <xs:annotation>
                    <xs:documentation>A unit (base or derived SI unit).</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MIMEBased">
                <xs:annotation>
                    <xs:documentation>Should we allow any MIME-type based, “BLOB” type?</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AnIML">
                <xs:annotation>
                    <xs:documentation>Could be a subset of MIMEBased, with metadata “AnIML + Technique Definition”?
                        TODO: define a method how to describe an AniML file...
                        AnIML Files are:
                        Valid XML conforming to the core XML schema
                        AnIML files have 4 top-level entities: SampleSet, ExperimentStepSet, AuditTrailEntrySet and
                        SingnatureSet
                        Each ExperimentStep is defined by (and references) a Technique Definition
                        A Technique Definition is a blueprint for an ExperimentStep and the Samples it references
                        If a Sample belongs to more than one ExperimentStep, the Sample inherits from all those
                        experiment techniques’ SampleBlueprints.
                        A technique definition / blueprint is a valid XML file conforming to the techniques XML schema
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Boolean">
                <xs:annotation>
                    <xs:documentation>A Boolean value (“true”/”false”, “yes”/”no”).</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Date">
                <xs:annotation>
                    <xs:documentation>Date</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Void">
                <xs:annotation>
                    <xs:documentation>void</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:group name="typedetail">
        <xs:sequence>
            <xs:element name="Type" type="silaType">
                <xs:annotation>
                    <xs:documentation>The type of this parameter. The type implicitly defines the unit, if required.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DisplayUnit" type="unitType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>If type = PhysicalValue: A hint towards the unit to be used when presenting the
                        value of this parameter.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DefaultValue" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The default value for this parameter. If the parameter is omitted when calling the
                        command, the default is used.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="MinValue" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Min value (if Type is numeric)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="MaxValue" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Max value (if Type is numeric)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="MinLength" type="xs:integer" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Min length of the string (if Type = String)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="MaxLength" type="xs:integer" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Max length of the string (if Type = String)</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="parameterType">
        <xs:sequence>
            <xs:element name="Identifier" type="identifierType">
                <xs:documentation>
                    The unique identifier of this parameter.
                    Schema: [adjective_]noun(s) (optional adjective, singular or plural noun(s), depending on context)
                    Example: timeout, speed, temperature, vessel_temperature, front_door
                </xs:documentation>
            </xs:element>
            <xs:element name="DisplayName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized name of this parameter.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized description of this parameter.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="typedetail"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="errorType">
        <xs:sequence>
            <xs:element name="Identifier" type="identifierType">
                <xs:annotation>
                    <xs:documentation>
                        The unique identifier of this error.
                        Commands require the definition of standard errors that might occur.
                        In case the error is one of those command standard error, its name is specified here.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A human readable description of the error.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- We can potentially omit the type here, since only Standard Execution Errors are defined in the FDL -->
            <xs:element name="Type" type="xs:simpleType">
                <xs:annotation>
                    <xs:documentation>Specifies the Type of SiLA Error.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                        <xs:enumeration value="StandardExecutionError"/>
                        <xs:enumeration value="UnknownExecutionError"/>
                    </xs:restriction>
            </xs:element>
            <xs:element name="Redirect" type="xs:anyURI" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>In case the device supports a exception handling pattern, the redirect leads to
                        the Feature which provides this handling capability (e.g. continuation tasks).
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="commandType">
        <xs:sequence>
            <xs:element name="Identifier" type="identifierType">
                <xs:annotation>
                    <xs:documentation>
                        The unique identifier of this command.
                        Schema: verb[_adjective(s)][_noun(s)] (verb in imperative singular, optional adjective(s),
                        optional noun(s))
                        Example: initialize, get_status, lock, open, get_outstanding_sample_requests
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DisplayName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized name of this command.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized description of this command.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Parameter" type="parameterType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>A list of all parameters that may be used with this command.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ReturnValue" type="xs:duration" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>As in SiLA 1.3 the immediate (sync) answer of a command may return the actual
                        duration (based on current parameters and context).
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ReturnType" type="silaType">
                <xs:annotation>
                    <xs:documentation>The type of the return value (comes in an event).</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Duration" type="xs:duration" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The expected duration to execute this command.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Error" type="errorType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>A list of errors that might be returned when executing a command. The Standard
                        Error Name MUST be contained in the SiLA Error Message.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="propertyType">
        <xs:sequence>
            <xs:element name="Identifier" type="identifierType">
                <xs:annotation>
                    <xs:documentation>
                        The unique identifier of this property.
                        Schema: [adjective_]noun(s) (optional adjective, singular or plural noun(s), depending on
                        context)
                        Example: timeout, speed, temperature, vessel_temperature, front_door
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DisplayName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized name of this property.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized description of this property.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="typedetail">
                <xs:element name="Type" type="silaType">
                    <xs:annotation>
                        <xs:documentation>The type of this property. The type implicitly defines the unit, if
                            required.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:group>
            <xs:element name="ValueChange" type="xs:simpleType">
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Dynamic"/>
                        <xs:enumeration value="Static"/>
                    </xs:restriction>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="featureType">
        <xs:sequence>
            <xs:element name="Identifier" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The unique identifier of this feature.
                        Schema: verb_noun (verb in 3rd person singular, noun depending on context)
                        Example: needs_initialization, can_lock, can_open
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Version" type="versionType">
                <xs:annotation>
                    <xs:documentation>Version of this feature, major.minor.patch level.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DisplayName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized name of this feature.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Human readable and localized description of this feature.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Command" type="commandType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>A list of all commands that may be used in the context of this feature.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Property" type="propertyType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>A list of all properties that are associated with this feature.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="Feature" type="featureType">
        <xs:annotation>
            <xs:documentation>Description of SiLA2 Feature.</xs:documentation>
        </xs:annotation>
    </xs:element>

</xs:schema>