# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: can_weigh.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import stdlib_pb2 as stdlib__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='can_weigh.proto',
  package='org.sila_standard.v2.realease_candidate.can_weigh',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x63\x61n_weigh.proto\x12\x31org.sila_standard.v2.realease_candidate.can_weigh\x1a\x0cstdlib.proto2\xbd\x03\n\tcan_weigh\x12\x8e\x01\n\x15measure_stable_weight\x12\x34.org.sila_standard.v2.realease_candidate.stdlib.Void\x1a=.org.sila_standard.v2.realease_candidate.stdlib.PhysicalValue\"\x00\x12\x81\x01\n\x11\x63\x61librate_balance\x12\x34.org.sila_standard.v2.realease_candidate.stdlib.Void\x1a\x34.org.sila_standard.v2.realease_candidate.stdlib.Void\"\x00\x12\x9a\x01\n\x0e\x63urrent_weight\x12\x45.org.sila_standard.v2.realease_candidate.stdlib.SiLA_Property_Request\x1a=.org.sila_standard.v2.realease_candidate.stdlib.PhysicalValue\"\x00\x30\x01\x62\x06proto3')
  ,
  dependencies=[stdlib__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)





import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class can_weighStub(object):
  """Feature "can_weigh"
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.measure_stable_weight = channel.unary_unary(
        '/org.sila_standard.v2.realease_candidate.can_weigh.can_weigh/measure_stable_weight',
        request_serializer=stdlib__pb2.Void.SerializeToString,
        response_deserializer=stdlib__pb2.PhysicalValue.FromString,
        )
    self.calibrate_balance = channel.unary_unary(
        '/org.sila_standard.v2.realease_candidate.can_weigh.can_weigh/calibrate_balance',
        request_serializer=stdlib__pb2.Void.SerializeToString,
        response_deserializer=stdlib__pb2.Void.FromString,
        )
    self.current_weight = channel.unary_stream(
        '/org.sila_standard.v2.realease_candidate.can_weigh.can_weigh/current_weight',
        request_serializer=stdlib__pb2.SiLA_Property_Request.SerializeToString,
        response_deserializer=stdlib__pb2.PhysicalValue.FromString,
        )


class can_weighServicer(object):
  """Feature "can_weigh"
  """

  def measure_stable_weight(self, request, context):
    """Command: measure_stable_weight
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def calibrate_balance(self, request, context):
    """Command: calibrate_balance
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def current_weight(self, request, context):
    """Property: current_weight
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_can_weighServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'measure_stable_weight': grpc.unary_unary_rpc_method_handler(
          servicer.measure_stable_weight,
          request_deserializer=stdlib__pb2.Void.FromString,
          response_serializer=stdlib__pb2.PhysicalValue.SerializeToString,
      ),
      'calibrate_balance': grpc.unary_unary_rpc_method_handler(
          servicer.calibrate_balance,
          request_deserializer=stdlib__pb2.Void.FromString,
          response_serializer=stdlib__pb2.Void.SerializeToString,
      ),
      'current_weight': grpc.unary_stream_rpc_method_handler(
          servicer.current_weight,
          request_deserializer=stdlib__pb2.SiLA_Property_Request.FromString,
          response_serializer=stdlib__pb2.PhysicalValue.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class Betacan_weighServicer(object):
  """Feature "can_weigh"
  """
  def measure_stable_weight(self, request, context):
    """Command: measure_stable_weight
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def calibrate_balance(self, request, context):
    """Command: calibrate_balance
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def current_weight(self, request, context):
    """Property: current_weight
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class Betacan_weighStub(object):
  """Feature "can_weigh"
  """
  def measure_stable_weight(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Command: measure_stable_weight
    """
    raise NotImplementedError()
  measure_stable_weight.future = None
  def calibrate_balance(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Command: calibrate_balance
    """
    raise NotImplementedError()
  calibrate_balance.future = None
  def current_weight(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Property: current_weight
    """
    raise NotImplementedError()


def beta_create_can_weigh_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'calibrate_balance'): stdlib__pb2.Void.FromString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'current_weight'): stdlib__pb2.SiLA_Property_Request.FromString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'measure_stable_weight'): stdlib__pb2.Void.FromString,
  }
  response_serializers = {
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'calibrate_balance'): stdlib__pb2.Void.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'current_weight'): stdlib__pb2.PhysicalValue.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'measure_stable_weight'): stdlib__pb2.PhysicalValue.SerializeToString,
  }
  method_implementations = {
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'calibrate_balance'): face_utilities.unary_unary_inline(servicer.calibrate_balance),
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'current_weight'): face_utilities.unary_stream_inline(servicer.current_weight),
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'measure_stable_weight'): face_utilities.unary_unary_inline(servicer.measure_stable_weight),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_can_weigh_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'calibrate_balance'): stdlib__pb2.Void.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'current_weight'): stdlib__pb2.SiLA_Property_Request.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'measure_stable_weight'): stdlib__pb2.Void.SerializeToString,
  }
  response_deserializers = {
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'calibrate_balance'): stdlib__pb2.Void.FromString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'current_weight'): stdlib__pb2.PhysicalValue.FromString,
    ('org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', 'measure_stable_weight'): stdlib__pb2.PhysicalValue.FromString,
  }
  cardinalities = {
    'calibrate_balance': cardinality.Cardinality.UNARY_UNARY,
    'current_weight': cardinality.Cardinality.UNARY_STREAM,
    'measure_stable_weight': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'org.sila_standard.v2.realease_candidate.can_weigh.can_weigh', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
