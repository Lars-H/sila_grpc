# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: is_sila_v3.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import stdlib_pb2 as stdlib__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='is_sila_v3.proto',
  package='org.sila_standard.v2.realease_candidate.is_sila',
  syntax='proto3',
  serialized_pb=_b('\n\x10is_sila_v3.proto\x12/org.sila_standard.v2.realease_candidate.is_sila\x1a\x0cstdlib.proto\"\xb5\x01\n\x14\x44\x65viveIdentification\x12\x0c\n\x04wsdl\x18\x01 \x01(\t\x12\x1e\n\x16sila_interface_version\x18\x02 \x01(\t\x12\x1b\n\x13\x64\x65vice_manufacturer\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65vice_name\x18\x04 \x01(\t\x12\x1c\n\x14\x64\x65vice_serial_number\x18\x05 \x01(\t\x12\x1f\n\x17\x64\x65vice_firmware_version\x18\x06 \x01(\t\"j\n\x11SupportedFeatures\x12U\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32\x43.org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription\"[\n\x12\x46\x65\x61tureDescription\x12\x14\n\x0c\x66\x65\x61ture_name\x18\x01 \x01(\t\x12\x1b\n\x13\x66\x65\x61ture_description\x18\x02 \x01(\t\x12\x12\n\nproto_file\x18\x03 \x01(\t2\xb5\x02\n\x07is_sila\x12\x96\x01\n\x15\x64\x65vice_identification\x12\x34.org.sila_standard.v2.realease_candidate.stdlib.Void\x1a\x45.org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification\"\x00\x12\x90\x01\n\x12supported_features\x12\x34.org.sila_standard.v2.realease_candidate.stdlib.Void\x1a\x42.org.sila_standard.v2.realease_candidate.is_sila.SupportedFeatures\"\x00\x62\x06proto3')
  ,
  dependencies=[stdlib__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_DEVIVEIDENTIFICATION = _descriptor.Descriptor(
  name='DeviveIdentification',
  full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='wsdl', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.wsdl', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sila_interface_version', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.sila_interface_version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_manufacturer', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.device_manufacturer', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.device_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_serial_number', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.device_serial_number', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_firmware_version', full_name='org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification.device_firmware_version', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=265,
)


_SUPPORTEDFEATURES = _descriptor.Descriptor(
  name='SupportedFeatures',
  full_name='org.sila_standard.v2.realease_candidate.is_sila.SupportedFeatures',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='features', full_name='org.sila_standard.v2.realease_candidate.is_sila.SupportedFeatures.features', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=267,
  serialized_end=373,
)


_FEATUREDESCRIPTION = _descriptor.Descriptor(
  name='FeatureDescription',
  full_name='org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature_name', full_name='org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription.feature_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='feature_description', full_name='org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription.feature_description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proto_file', full_name='org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription.proto_file', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=466,
)

_SUPPORTEDFEATURES.fields_by_name['features'].message_type = _FEATUREDESCRIPTION
DESCRIPTOR.message_types_by_name['DeviveIdentification'] = _DEVIVEIDENTIFICATION
DESCRIPTOR.message_types_by_name['SupportedFeatures'] = _SUPPORTEDFEATURES
DESCRIPTOR.message_types_by_name['FeatureDescription'] = _FEATUREDESCRIPTION

DeviveIdentification = _reflection.GeneratedProtocolMessageType('DeviveIdentification', (_message.Message,), dict(
  DESCRIPTOR = _DEVIVEIDENTIFICATION,
  __module__ = 'is_sila_v3_pb2'
  # @@protoc_insertion_point(class_scope:org.sila_standard.v2.realease_candidate.is_sila.DeviveIdentification)
  ))
_sym_db.RegisterMessage(DeviveIdentification)

SupportedFeatures = _reflection.GeneratedProtocolMessageType('SupportedFeatures', (_message.Message,), dict(
  DESCRIPTOR = _SUPPORTEDFEATURES,
  __module__ = 'is_sila_v3_pb2'
  # @@protoc_insertion_point(class_scope:org.sila_standard.v2.realease_candidate.is_sila.SupportedFeatures)
  ))
_sym_db.RegisterMessage(SupportedFeatures)

FeatureDescription = _reflection.GeneratedProtocolMessageType('FeatureDescription', (_message.Message,), dict(
  DESCRIPTOR = _FEATUREDESCRIPTION,
  __module__ = 'is_sila_v3_pb2'
  # @@protoc_insertion_point(class_scope:org.sila_standard.v2.realease_candidate.is_sila.FeatureDescription)
  ))
_sym_db.RegisterMessage(FeatureDescription)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class is_silaStub(object):
  """Feature "is_sila"
  Version: 3
  In this version the description of features is simplified

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.device_identification = channel.unary_unary(
        '/org.sila_standard.v2.realease_candidate.is_sila.is_sila/device_identification',
        request_serializer=stdlib__pb2.Void.SerializeToString,
        response_deserializer=DeviveIdentification.FromString,
        )
    self.supported_features = channel.unary_unary(
        '/org.sila_standard.v2.realease_candidate.is_sila.is_sila/supported_features',
        request_serializer=stdlib__pb2.Void.SerializeToString,
        response_deserializer=SupportedFeatures.FromString,
        )


class is_silaServicer(object):
  """Feature "is_sila"
  Version: 3
  In this version the description of features is simplified

  """

  def device_identification(self, request, context):
    """Property: Device Identification
    This Property holds all of the Information about the device
    This is related to the GetDeviceIdentification in SiLA 1.3
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def supported_features(self, request, context):
    """Property: Supported Features
    This Property holds infortmation on all supported features of the device
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_is_silaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'device_identification': grpc.unary_unary_rpc_method_handler(
          servicer.device_identification,
          request_deserializer=stdlib__pb2.Void.FromString,
          response_serializer=DeviveIdentification.SerializeToString,
      ),
      'supported_features': grpc.unary_unary_rpc_method_handler(
          servicer.supported_features,
          request_deserializer=stdlib__pb2.Void.FromString,
          response_serializer=SupportedFeatures.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'org.sila_standard.v2.realease_candidate.is_sila.is_sila', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class Betais_silaServicer(object):
  """Feature "is_sila"
  Version: 3
  In this version the description of features is simplified

  """
  def device_identification(self, request, context):
    """Property: Device Identification
    This Property holds all of the Information about the device
    This is related to the GetDeviceIdentification in SiLA 1.3
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def supported_features(self, request, context):
    """Property: Supported Features
    This Property holds infortmation on all supported features of the device
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class Betais_silaStub(object):
  """Feature "is_sila"
  Version: 3
  In this version the description of features is simplified

  """
  def device_identification(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Property: Device Identification
    This Property holds all of the Information about the device
    This is related to the GetDeviceIdentification in SiLA 1.3
    """
    raise NotImplementedError()
  device_identification.future = None
  def supported_features(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Property: Supported Features
    This Property holds infortmation on all supported features of the device
    """
    raise NotImplementedError()
  supported_features.future = None


def beta_create_is_sila_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'device_identification'): stdlib__pb2.Void.FromString,
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'supported_features'): stdlib__pb2.Void.FromString,
  }
  response_serializers = {
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'device_identification'): DeviveIdentification.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'supported_features'): SupportedFeatures.SerializeToString,
  }
  method_implementations = {
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'device_identification'): face_utilities.unary_unary_inline(servicer.device_identification),
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'supported_features'): face_utilities.unary_unary_inline(servicer.supported_features),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_is_sila_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'device_identification'): stdlib__pb2.Void.SerializeToString,
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'supported_features'): stdlib__pb2.Void.SerializeToString,
  }
  response_deserializers = {
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'device_identification'): DeviveIdentification.FromString,
    ('org.sila_standard.v2.realease_candidate.is_sila.is_sila', 'supported_features'): SupportedFeatures.FromString,
  }
  cardinalities = {
    'device_identification': cardinality.Cardinality.UNARY_UNARY,
    'supported_features': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'org.sila_standard.v2.realease_candidate.is_sila.is_sila', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
